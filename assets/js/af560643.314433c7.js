"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9646],{3927:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"inspector/memoria","title":"Memoria","description":"La pesta\xf1a Memoria (Memory) del Inspector de Elementos te permite analizar c\xf3mo una p\xe1gina web utiliza la memoria del navegador. Es fundamental para detectar fugas de memoria (memory leaks) y optimizar el uso de recursos, especialmente en aplicaciones de larga duraci\xf3n como SPAs.","source":"@site/docs/inspector/memoria.md","sourceDirName":"inspector","slug":"/inspector/memoria","permalink":"/docusaurus/docs/inspector/memoria","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/inspector/memoria.md","tags":[],"version":"current","frontMatter":{"title":"Memoria"},"sidebar":"tutorialSidebar","previous":{"title":"Interfaz de Rendimiento","permalink":"/docusaurus/docs/inspector/rendimiento"},"next":{"title":"Interfaz de Aplicaci\xf3n","permalink":"/docusaurus/docs/inspector/aplicacion"}}');var r=n(4848),o=n(8453);const i={title:"Memoria"},t=void 0,l={},c=[{value:"\ud83e\udde0 \xbfQu\xe9 es una fuga de memoria?",id:"-qu\xe9-es-una-fuga-de-memoria",level:2},{value:"\ud83d\udee0\ufe0f Funcionalidades clave",id:"\ufe0f-funcionalidades-clave",level:2},{value:"1. <strong>Tipos de capturas de memoria</strong>",id:"1-tipos-de-capturas-de-memoria",level:3},{value:"2. <strong>Tomar un Heap Snapshot</strong>",id:"2-tomar-un-heap-snapshot",level:3},{value:"3. <strong>Detectar objetos no liberados</strong>",id:"3-detectar-objetos-no-liberados",level:3},{value:"4. <strong>Tips para liberar memoria</strong>",id:"4-tips-para-liberar-memoria",level:3},{value:"\ud83e\uddea \xbfCu\xe1ndo usar esta pesta\xf1a?",id:"-cu\xe1ndo-usar-esta-pesta\xf1a",level:3}];function d(e){const a={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a.p,{children:["La pesta\xf1a ",(0,r.jsx)(a.strong,{children:"Memoria"})," (",(0,r.jsx)(a.em,{children:"Memory"}),") del Inspector de Elementos te permite analizar c\xf3mo una p\xe1gina web utiliza la memoria del navegador. Es fundamental para detectar fugas de memoria (",(0,r.jsx)(a.em,{children:"memory leaks"}),") y optimizar el uso de recursos, especialmente en aplicaciones de larga duraci\xf3n como SPAs."]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"-qu\xe9-es-una-fuga-de-memoria",children:"\ud83e\udde0 \xbfQu\xe9 es una fuga de memoria?"}),"\n",(0,r.jsx)(a.p,{children:"Una fuga de memoria ocurre cuando los datos se almacenan en la memoria y nunca se liberan, incluso cuando ya no se necesitan. Esto puede hacer que una aplicaci\xf3n web se vuelva lenta o incluso se bloquee con el tiempo."}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"\ufe0f-funcionalidades-clave",children:"\ud83d\udee0\ufe0f Funcionalidades clave"}),"\n",(0,r.jsxs)(a.h3,{id:"1-tipos-de-capturas-de-memoria",children:["1. ",(0,r.jsx)(a.strong,{children:"Tipos de capturas de memoria"})]}),"\n",(0,r.jsxs)(a.p,{children:["Dentro de la pesta\xf1a ",(0,r.jsx)(a.strong,{children:"Memory"}),", puedes elegir tres tipos de an\xe1lisis:"]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Heap snapshot:"}),' Toma una "foto" del estado actual de la memoria. Muestra todos los objetos y cu\xe1nta memoria usan.']}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Allocation instrumentation on timeline:"})," Mide en tiempo real qu\xe9 objetos se est\xe1n creando y cu\xe1ndo."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Allocation sampling:"})," Toma muestras estad\xedsticas para mostrar tendencias generales en el uso de memoria."]}),"\n"]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h3,{id:"2-tomar-un-heap-snapshot",children:["2. ",(0,r.jsx)(a.strong,{children:"Tomar un Heap Snapshot"})]}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:["Ve a la pesta\xf1a ",(0,r.jsx)(a.strong,{children:"Memory"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:["Selecciona ",(0,r.jsx)(a.strong,{children:"Heap snapshot"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:["Haz clic en ",(0,r.jsx)(a.strong,{children:"Take snapshot"}),"."]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:"Una vez completado, podr\xe1s explorar los objetos existentes, qui\xe9n los referencia y si pueden ser eliminados."}),"\n",(0,r.jsx)(a.p,{children:'Busca nodos "retained" que deber\xedan haberse eliminado: esos pueden indicar una fuga.'}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h3,{id:"3-detectar-objetos-no-liberados",children:["3. ",(0,r.jsx)(a.strong,{children:"Detectar objetos no liberados"})]}),"\n",(0,r.jsx)(a.p,{children:"Una forma de encontrar fugas es tomar un snapshot, interactuar con la p\xe1gina (por ejemplo, abrir y cerrar un modal), luego tomar otro snapshot."}),"\n",(0,r.jsx)(a.p,{children:"Compara ambos para ver si hay objetos que deber\xedan haberse eliminado pero permanecen en memoria."}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsxs)(a.h3,{id:"4-tips-para-liberar-memoria",children:["4. ",(0,r.jsx)(a.strong,{children:"Tips para liberar memoria"})]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Remueve listeners innecesarios:"})," No olvides hacer ",(0,r.jsx)(a.code,{children:".removeEventListener()"})," cuando los elementos se eliminen del DOM."]}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.strong,{children:"Evita referencias globales innecesarias."})}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsxs)(a.strong,{children:["Usa estructuras de datos como ",(0,r.jsx)(a.code,{children:"WeakMap"})," y ",(0,r.jsx)(a.code,{children:"WeakSet"})]})," cuando quieras que el recolector de basura libere autom\xe1ticamente objetos no referenciados."]}),"\n"]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h3,{id:"-cu\xe1ndo-usar-esta-pesta\xf1a",children:"\ud83e\uddea \xbfCu\xe1ndo usar esta pesta\xf1a?"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:"Si tu app web se vuelve lenta despu\xe9s de estar mucho tiempo abierta."}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:"Si notas que la memoria usada por el navegador no baja aunque cambies de vista o cierres componentes."}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:"Para optimizar aplicaciones con mucho JavaScript que manejan datos din\xe1micos."}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:"Para asegurar una buena experiencia en m\xf3viles o dispositivos con recursos limitados."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.p,{children:"La pesta\xf1a Memoria te da una vista profunda de c\xf3mo se maneja la RAM en tu aplicaci\xf3n. Detectar y corregir fugas no solo mejora el rendimiento, sino que tambi\xe9n evita errores impredecibles y mejora la estabilidad general de tu aplicaci\xf3n web."})]})}function u(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>t});var s=n(6540);const r={},o=s.createContext(r);function i(e){const a=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:a},e.children)}}}]);